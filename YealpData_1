Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total number of distinct records for the primary keys in each of the tables listed below:

i. 	Business =	10000 - id
ii. 	Hours =	1562 - business_id
iii. 	Category =	2643  -  business_id
iv. 	Attribute =	1115 - business_id
v. 	Review = 10000	- id,	8090 - business_id, 9581 - user_id
vi. 	Checkin = 493 - business_id
vii. 	Photo =	10000 - id,	6493 - business_id
viii. 	Tip = 	537	- user_id,3979 - business_id
ix. 	User = 	10000 - id
x. 	Friend = 	11	- user_id
xi. 	Elite_years = 2780	- user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	SELECT id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, 
			   compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
			   compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
		FROM  user
		WHERE 	id is null
				or name is null
				or review_count is null
				or yelping_since is null
				or useful is null
				or funny is null
				or cool is null
				or fans is null
				or average_stars is null
				or compliment_hot is null
				or compliment_more is null
				or compliment_profile is null
				or compliment_cute is null
				or compliment_list is null
				or compliment_note is null
				or compliment_plain is null
				or compliment_cool is null
				or compliment_funny is null
				or compliment_writer is null
				or compliment_photos is null
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
		
		min: 1		max: 5		avg: 3.7082
		
	ii. Table: Business, Column: Stars
		
		min: 1.0	max: 5.0	avg: 3.6549
	
	iii. Table: Tip, Column: Likes
		
		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count
		
		min: 1		max: 53		avg: 1.9414
	
	v. Table: User, Column: Review_count
		
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
			
		SELECT city, sum(review_count)
		FROM business
		GROUP BY city
		ORDER BY sum(review_count) DESC
	
	Copy and Paste the Result Below:

	+------------------+--------+
| city             | Review |
+------------------+--------+
| Blainville       |      3 |
| Bolton           |      3 |
| Braddock         |      3 |
| Brooklin         |      3 |
| Brooklyn Heights |      3 |
| Dallas           |      3 |
| East Gwillimbury |      3 |
| Firth of Forth   |      3 |
| Fort McDowell    |      3 |
| Glenshaw         |      3 |
| Gormley          |      3 |
| Haddington       |      3 |
| Ingliston        |      3 |
| Kahnawake        |      3 |
| Kennedy Township |      3 |
| King             |      3 |
| Kirtland         |      3 |
| L'ile-Bizard     |      3 |
| McFarland        |      3 |
| Middleburg Hts   |      3 |
| Monticello       |      3 |
| Möglingen        |      3 |
| Nellis AFB       |      3 |
| Neuhausen        |      3 |
| North Randall    |      3 |
+------------------+--------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
			SELECT stars AS "Star Rating", count(stars) AS "Count"
			FROM business 
			WHERE city = 'Avon'
			GROUPBY "Star Rating"
		

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:
			SELECT stars AS "Star Rating", count(stars) AS "Count"
			FROM business 
			WHERE city = 'Beachwood'
			GROUPBY "Star Rating"

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		SELECT name, review_count
		FROM user
		ORDER BY review_count DESC
		LIMIT 3
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?
		They're not correlated each other

	Please explain your findings and interpretation of the results:
	As you can see the result, review and fans are not going along with each other.
		
		SELECT name, review_count, fans
		FROM user
		ORDER BY fans DESC

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love

	
	SQL code used to arrive at answer:

SELECT (SELECT COUNT(text)
        FROM review
        WHERE text like "%love%") AS Love,

		(SELECT COUNT(text)
        FROM review
        WHERE text like "%hate%") AS Hate
        

+------+------+
| Love | Hate |
+------+------+
| 1780 |  232 |
+------+------+
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		SELECT name, fans
		FROM user
		ORDER BY fans DESC
		LIMIT 10
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
		SELECT name, fans, useful, funny
		FROM user
		ORDER BY fans DESC, useful DESC, funny DESC
		limit 10
	
	Copy and Paste the Result Below:
+-----------+------+--------+--------+
| name      | fans | useful |  funny |
+-----------+------+--------+--------+
| Amy       |  503 |   3226 |   2554 |
| Mimi      |  497 |    257 |    138 |
| Harald    |  311 | 122921 | 122419 |
| Gerald    |  253 |  17524 |   2324 |
| Christine |  173 |   4834 |   6646 |
| Lisa      |  159 |     48 |     13 |
| Cat       |  133 |   1062 |    672 |
| William   |  126 |   9363 |   9361 |
| Fran      |  124 |   9851 |   7606 |
| Lissa     |  120 |    455 |    150 |
+-----------+------+--------+--------+
	
	Please explain your findings and interpretation of the results:
	
	As you can see the result, there is not strong relationship 
	between having a high number of fans and being listed as "useful" or "funny"
	I would say they're low relationship because Amy has more fans than rest, but William
	or Fran has more useful and funny being listed.
	
