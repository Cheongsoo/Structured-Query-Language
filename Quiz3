1)Using a subquery, find the names of all the tracks for the album "Californication".

SELECT T.Name
FROM Tracks AS T 
WHERE T.AlbumId IN 
(SELECT A.AlbumId
  FROM Albums A 
    WHERE A.Title = 'Californication')
    
2)Find the total number of invoices for each customer along with the customer's full name, city and email.

SELECT C.FirstName, C.LastName, C.City, C.Email, 
COUNT(I.InvoiceId)
FROM Customers AS C join Invoices AS I 
ON C.CustomerId = I.CustomerId
GROUP BY C.CustomerId

3)Retrieve the track name, album, artist, and trackID for all the albums.

SELECT T.Name, A.Title, Ar.Name, T.TrackId
FROM ((Artists Ar INNER JOIN Albums A ON Ar.ArtistId = A.ArtistId)
INNER JOIN Tracks T ON A.AlbumId = T.AlbumId)

4)Retrieve a list with the managers last name, and the last name of the employees who report to him or her.

SELECT M.LastName AS Manager, E.LastName AS Employee 
FROM Employees M, Employees E 
WHERE E.ReportsTo = M.EmployeeId

5)Find the name and ID of the artists who do not have albums.

SELECT Ar.Name, Ar.ArtistId
FROM Artists Ar
LEFT JOIN Albums A ON Ar.ArtistId = A.ArtistId 
WHERE A.Title is NULL

6)Use a UNION to create a list of all the employee's & customer's first names and last names ordered by the last name in descending order.

SELECT E.FirstName, E.LastName
FROM Employees E
UNION
SELECT C.FirstName, C.LastName
FROM Customers C
ORDER BY C.LastName DESC

7)See if there are any customers who have a different city listed in their billing city versus their customer city.

SELECT C.CustomerId, C.City
FROM Customers C
JOIN Invoices I ON C.CustomerId = I.CustomerId
WHERE C.City <> I.BillingCity
